---
import GitHub from "./icons/GitHub.astro"
import Net from "./icons/Net.astro"
import Django from "./icons/Django.astro"
import Springboot from "./icons/Springboot.astro"
import Ionic from "./icons/Ionic.astro"
import NestJS from "./icons/NestJS.astro"
import Angular from "./icons/Angular.astro"
import Laravel from "./icons/Laravel.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import React from "./icons/React.astro";

const TAGS = {
  NEST: {
    name: "NestJS",
    class: "bg-[#003159] text-white",
    icon: NestJS,
  },
  LARAVEL: {
    name: "Laravel",
    class: "bg-[#003159] text-white",
    icon: Laravel,
  },
    ANGULAR: {
        name: "Angular",
        class: "bg-[#003159] text-white",
        icon: Angular,
    },
    IONIC: {
        name: "Ionic",
        class: "bg-[#003159] text-white",
        icon: Ionic,
    },
    SPRINGBOOT: {
        name: "Springboot",
        class: "bg-[#003159] text-white",
        icon: Springboot,
    },
    NET: {
        name: ".NET",
        class: "bg-[#003159] text-white",
        icon: Net,
    },
    DJANGO: {
        name: "DJANGO",
        class: "bg-[#003159] text-white",
        icon: Django,
    },
    REACT: {
        name: "REACT",
        class: "bg-[#003159] text-white",
        icon: React,
    },
}
const PROJECTS = [
    {
        title: "FilmTeca, biblioteca de peliculas para informarte sobre ellas y ver y dejar valoraciones.",
        description:
            "Pagina web realizada el back con NestJS y el front con React para conseguir una biblioteca de peliculas con informacion de directores, actores, premios, generos, valoraciones, gestion de usuarios...",
        link: "https://filmteca.netlify.app/",
        github: "https://github.com/jaime9lozano/FilmTeca",
        image: "/projects/FilmTeca.png",
        tags: [TAGS.NEST, TAGS.REACT],
    },
  {
    title: "TFG de una pagina web para vender productos de forma online.",
    description:
      "Pagina web para venta de productos online realizada el back con springboot y el front con angular y ionic en la que tiene valoraciones, ofertas, productos, categorias, gestion de usuarios, pedidos , perfiles, restuarantes, storage, websocket... Todo testeado",
    link: "https://bio-online.netlify.app/",
    github: "https://github.com/jaime9lozano/TFG-JaimeLozano-DiegoTorres",
    image: "/projects/TFGMacJava.png",
    tags: [TAGS.ANGULAR, TAGS.IONIC, TAGS.SPRINGBOOT],
  },
  {
    title: "Pagina web para venta de productos online realizada en Laravel.",
    description:
      "Pagina web para venta de productos online realizada en PHP con Laravel en la que tiene productos, categorias, gestion de usuarios, pedidos , perfiles, restuarantes, storage... Todo testeado",
      github: "https://github.com/jaime9lozano/MacJavaServer-Laravel",
      link:"",
    image: "/projects/Laravel.png",
    tags: [TAGS.LARAVEL],
  },
    {
        title: "Pagina web para venta de productos online realizada en NestJS.",
        description:
            "Pagina web para venta de productos online realizada en Typescript con NestJS en la que tiene productos, categorias, gestion de usuarios, pedidos , perfiles, restuarantes, storage... Todo testeado",
        github: "https://github.com/DiegoTorresMijarra/MacJavaServer-Nest",
        link:"",
        image: "/projects/NestJS.png",
        tags: [TAGS.NEST],
    },
    {
        title: "Pagina web para venta y compra de productos online realizada en .NET.",
        description:
            "Pagina web que sirve tanto para vendedores que suben sus productos y pueden obtener tambien productos de proveedores, poner ofertas, gestion de sus productos y su tienda, y otro usuario como comprador que puede comprar productos y poner valoraciones, pedir devoluciones y el admin con toda la gestion de usuarios.",
        github: "",
        link:"",
        image: "/projects/.NET.png",
        tags: [TAGS.NET],
    },
    {
        title: "Pagina web FunkoLandia con venta de funkos.",
        description:
            "Pagina web para venta de funkos online realizada en Python con Django en la que tiene funkos, categorias, gestion de usuarios, pedidos , perfiles...",
        github: "https://github.com/jaime9lozano/FunkoLandiaDjango",
        link:"",
        image: "/projects/Django.png",
        tags: [TAGS.DJANGO],
    },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
      <div class="relative transition duration-500 ease-in-out transform md:group-hover:-translate-y-1 md:group-hover:shadow-2xl">
          <img alt="" loading="lazy" src={image} />
      </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Codigo
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Visualizar
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



